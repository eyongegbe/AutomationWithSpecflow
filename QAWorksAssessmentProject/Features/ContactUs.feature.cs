// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace QAWorksAssessmentProject.Features
{
    using TechTalk.SpecFlow;
    using Autofac;
    using Autofac.Configuration;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ContactUsPage")]
    public partial class ContactUsPageFeature
    {
        
        private OpenQA.Selenium.IWebDriver driver;
        
        private IContainer container;
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ContactUs.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            var builder = new ContainerBuilder();
            builder.RegisterModule(new ConfigurationSettingsReader());
            this.container = builder.Build();
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ContactUsPage", "As an end user\r\nI want a contact us page\r\nSo that I can find out more about QAWor" +
                    "ks exciting services", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
            try { System.Threading.Thread.Sleep(50); this.driver.Quit(); } catch (System.Exception) {}
            this.driver = null;
            ScenarioContext.Current.Remove("Driver");
            ScenarioContext.Current.Remove("Container");
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            if(this.driver != null)
                ScenarioContext.Current.Add("Driver", this.driver);
            if(this.container != null)
                ScenarioContext.Current.Add("Container", this.container);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        private void InitializeSelenium(string browser)
        {
            this.driver = this.container.ResolveNamed<OpenQA.Selenium.IWebDriver>(browser);
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Valid Submission")]
        [NUnit.Framework.CategoryAttribute("RegressionTest")]
        [NUnit.Framework.TestCaseAttribute("Chrome", Category="Chrome", TestName="ValidSubmission on Chrome")]
        public virtual void ValidSubmission(string browser)
        {
            InitializeSelenium(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Valid Submission", new string[] {
                        "RegressionTest",
                        "Browser:Chrome"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("I am on the QAWorks Staging Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Email",
                        "Message"});
            table1.AddRow(new string[] {
                        "j. Bloggs",
                        "j.Bloggs@qaworks.com",
                        "please contact me I want to find out more"});
#line 11
 testRunner.Then("I should be able to contact QA Works with the following information", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid Email submission")]
        [NUnit.Framework.CategoryAttribute("RegressionTest")]
        [NUnit.Framework.TestCaseAttribute("Chrome", Category="Chrome", TestName="InvalidEmailSubmission on Chrome")]
        public virtual void InvalidEmailSubmission(string browser)
        {
            InitializeSelenium(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid Email submission", new string[] {
                        "RegressionTest",
                        "Browser:Chrome"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
 testRunner.Given("I am on the Contact Page of QAWorks Staging Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "InvalidEmail",
                        "Name"});
            table2.AddRow(new string[] {
                        "djhfgs@com..",
                        "James"});
#line 19
 testRunner.When("I complete the form with an invalid email address", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ErrorMsg"});
            table3.AddRow(new string[] {
                        "Invalid Email Address"});
#line 22
 testRunner.Then("an error message should display below the email field", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Incomplete Message Submission")]
        [NUnit.Framework.CategoryAttribute("RegressionTest")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "\"\"", "j.bloggs@qaworks.com", "please contact me I want to find out more", "Your name is required", "span#ctl00_MainContent_rfvName", null, Category="Chrome", TestName="IncompleteMessageSubmission on Chrome with: \"\"\"\" ,\"j.bloggs@qaworks.com\" ,\"please" +
            " contact me I want to find out more\" ,\"Your name is required\" ,\"span#ctl00_MainC" +
            "ontent_rfvName\"")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "Fred", "\"\"", "please contact me I want to find out more", "An Email address is required", "span#ctl00_MainContent_rfvName", null, Category="Chrome", TestName="IncompleteMessageSubmission on Chrome with: \"Fred\" ,\"\"\"\" ,\"please contact me I wa" +
            "nt to find out more\" ,\"An Email address is required\" ,\"span#ctl00_MainContent_rf" +
            "vName\"")]
        [NUnit.Framework.TestCaseAttribute("Chrome", "Jim", "k.j.bloggs@qaworks.com", "\"\"", "Please type your message", "span#ctl00_MainContent_rfvMessage", null, Category="Chrome", TestName="IncompleteMessageSubmission on Chrome with: \"Jim\" ,\"k.j.bloggs@qaworks.com\" ,\"\"\"\"" +
            " ,\"Please type your message\" ,\"span#ctl00_MainContent_rfvMessage\"")]
        public virtual void IncompleteMessageSubmission(string browser, string name, string email, string message, string errorMsgText, string errorMsg, string[] exampleTags)
        {
            InitializeSelenium(browser);
            string[] @__tags = new string[] {
                    "RegressionTest",
                    "Browser:Chrome"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incomplete Message Submission", @__tags);
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
 testRunner.Given("I am on the Contact Page of QAWorks Staging Site", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
 testRunner.When(string.Format("I complete the form with incomplete information {0}, {1}, {2}", name, email, message), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.Then(string.Format("the correct error message {0} should be displayed correctly {1}", errorMsgText, errorMsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
